type='response', s='lambda.min')[,1]/length(K)
SVM_lin_H<-SVM_lin_H+predict(SVM_lin$fit[[i]],as.matrix(x[[i]]))/length(K)
SVM_rad_H<-SVM_rad_H+predict(SVM_rad$fit[[i]],as.matrix(x[[i]]))/length(K)
}
save(GLMNET_H,SVM_lin_H,SVM_rad_H,
file=paste("Working_files/",Version,"_H_",item,"_NonTrees_w",DTM_name,".RData",sep=""))
}
gc()
print("############################################################")
print("# Group Individual Predictions")
print("############################################################")
Mod2Blend<-data.frame(y=rep(NA,Nrows))
for (DTM_name in c(paste("DTM_Words_",nb_word_grams_max,"grams",sep=""))) {
print(DTM_name)
load(paste("Working_files/",Version,"_H_",item,"_GLMNET_4fs_",DTM_name,".RData",sep=""))
Mod2Blend<-data.frame(Mod2Blend,GLMNET_4fs_H)
names(Mod2Blend)[ncol(Mod2Blend)]<-paste(DTM_name,c("GLMNET_4fs"),sep="_")
}
for (DTM_name in c(paste("DTM_Chars_",nb_char_grams_max1,"grams",sep=""),
paste("DTM_Chars_",nb_char_grams_max2,"grams",sep=""))) {
print(DTM_name)
load(paste("Working_files/",Version,"_H_",item,"_RF_4fs_",DTM_name,".RData",sep=""))
Mod2Blend<-data.frame(Mod2Blend,RF_4fs_H)
names(Mod2Blend)[ncol(Mod2Blend)]<-paste(DTM_name,c("RF_4fs"),sep="_")
}
for (DTM_name in c(paste("Small2_DTM_Words_",nb_word_grams_max,"grams",sep=""),
paste("Small2_DTM_Words_",nb_word_grams_max,"grams_PROXIES",sep=""))) {
print(DTM_name)
load(paste("Working_files/",Version,"_H_",item,"_Trees_w_",DTM_name,".RData",sep=""))
Mod2Blend<-data.frame(Mod2Blend,RF_H,GBM_H)
names(Mod2Blend)[ncol(Mod2Blend)+(-1:0)]<-paste(DTM_name,c("RF","GBM"),sep="_")
}
for (DTM_name in c(paste("Small2_DTM_Words_",nb_word_grams_max,"grams",sep=""),
paste("Small_DTM_Chars_",nb_char_grams_max1,"grams",sep=""),
paste("PCA_Small_DTM_Chars_",nb_char_grams_max1,"grams",sep=""),
paste("Small_DTM_Chars_",nb_char_grams_max2,"grams",sep=""),
paste("PCA_Small_DTM_Chars_",nb_char_grams_max2,"grams",sep=""))) {
print(DTM_name)
load(paste("Working_files/",Version,"_H_",item,"_NonTrees_w_",DTM_name,".RData",sep=""))
Mod2Blend<-cbind(Mod2Blend,
GLMNET_H,
SVM_lin_H,
SVM_rad_H)
names(Mod2Blend)[ncol(Mod2Blend)+(-2:0)]<-
paste(DTM_name,c("GLMNET","SVM_lin","SVM_rad"),sep="_")
}
save(Mod2Blend,file=paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
print("############################################################")
}
summary(Mod2Blend)
training<-read.csv(paste(wd_path,'/Input/frompems/',item,'.tsv',sep=""), header=TRUE,
sep = "\t", fileEncoding="windows-1252",quote="")
# discard Final Scores that are not numeric
training[,Response_name]<-as.numeric(as.character(training[,Response_name]))
training<-training[!is.na(training[,Response_name]),]
# convert EssayText to character format
EssayText <-as.character(training$Item_Response)
Nrows<-length(EssayText)
# get score to be modelled
y<-training[,Response_name]
# store data
Store(EssayText,Nrows,y)
Mod2Blend=data.frame(y=y)
for (DTM_name in c(paste("DTM_Words_",nb_word_grams_max,"grams",sep=""))) {
print(DTM_name)
load(paste("Working_files/",Version,"_",item,"_GLMNET_4fs_",DTM_name,".RData",sep=""))
Mod2Blend<-data.frame(Mod2Blend,GLMNET_4fs$yhatV)
names(Mod2Blend)[ncol(Mod2Blend)]<-paste(DTM_name,c("GLMNET_4fs"),sep="_")
}
for (DTM_name in c(paste("DTM_Chars_",nb_char_grams_max1,"grams",sep=""),
paste("DTM_Chars_",nb_char_grams_max2,"grams",sep=""))) {
print(DTM_name)
load(paste("Working_files/",Version,"_",item,"_RF_4fs_",DTM_name,".RData",sep=""))
Mod2Blend<-data.frame(Mod2Blend,RF_4fs$yhatV)
names(Mod2Blend)[ncol(Mod2Blend)]<-paste(DTM_name,c("RF_4fs"),sep="_")
}
for (DTM_name in c(paste("Small2_DTM_Words_",nb_word_grams_max,"grams",sep=""),
paste("Small2_DTM_Words_",nb_word_grams_max,"grams_PROXIES",sep=""))) {
print(DTM_name)
load(paste("Working_files/",Version,"_",item,"_Trees_w_",DTM_name,".RData",sep=""))
Mod2Blend<-data.frame(Mod2Blend,RF$yhatV,GBM$yhatV)
names(Mod2Blend)[ncol(Mod2Blend)+(-1:0)]<-paste(DTM_name,c("RF","GBM"),sep="_")
}
for (DTM_name in c(paste("Small2_DTM_Words_",nb_word_grams_max,"grams",sep=""),
paste("Small_DTM_Chars_",nb_char_grams_max1,"grams",sep=""),
paste("PCA_Small_DTM_Chars_",nb_char_grams_max1,"grams",sep=""),
paste("Small_DTM_Chars_",nb_char_grams_max2,"grams",sep=""),
paste("PCA_Small_DTM_Chars_",nb_char_grams_max2,"grams",sep=""))) {
print(DTM_name)
load(paste("Working_files/",Version,"_",item,"_NonTrees_w_",DTM_name,".RData",sep=""))
Mod2Blend<-cbind(Mod2Blend,
GLMNET$yhatV,
SVM_lin$yhatV,
SVM_rad$yhatV)
names(Mod2Blend)[ncol(Mod2Blend)+(-2:0)]<-
paste(DTM_name,c("GLMNET","SVM_lin","SVM_rad"),sep="_")
}
save(Mod2Blend,file=paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
print("############################################################")
test<-read.csv(paste(wd_path,'/Input/frompems/',item,'.tsv',sep=""), header=TRUE,
sep = "\t", fileEncoding="windows-1252",quote="")
# convert EssayText to character format
EssayText <-as.character(test$Item_Response)
Nrows<-length(EssayText)
# if blank
cond<-nchar(EssayText)==0
EssayText[cond]<-"and"
# store data
Store(EssayText,Nrows)
Mod2Blend<-data.frame(y=rep(NA,Nrows))
for (DTM_name in c(paste("DTM_Words_",nb_word_grams_max,"grams",sep=""))) {
print(DTM_name)
load(paste("Working_files/",Version,"_H_",item,"_GLMNET_4fs_",DTM_name,".RData",sep=""))
Mod2Blend<-data.frame(Mod2Blend,GLMNET_4fs_H)
names(Mod2Blend)[ncol(Mod2Blend)]<-paste(DTM_name,c("GLMNET_4fs"),sep="_")
}
for (DTM_name in c(paste("DTM_Chars_",nb_char_grams_max1,"grams",sep=""),
paste("DTM_Chars_",nb_char_grams_max2,"grams",sep=""))) {
print(DTM_name)
load(paste("Working_files/",Version,"_H_",item,"_RF_4fs_",DTM_name,".RData",sep=""))
Mod2Blend<-data.frame(Mod2Blend,RF_4fs_H)
names(Mod2Blend)[ncol(Mod2Blend)]<-paste(DTM_name,c("RF_4fs"),sep="_")
}
for (DTM_name in c(paste("Small2_DTM_Words_",nb_word_grams_max,"grams",sep=""),
paste("Small2_DTM_Words_",nb_word_grams_max,"grams_PROXIES",sep=""))) {
print(DTM_name)
load(paste("Working_files/",Version,"_H_",item,"_Trees_w_",DTM_name,".RData",sep=""))
Mod2Blend<-data.frame(Mod2Blend,RF_H,GBM_H)
names(Mod2Blend)[ncol(Mod2Blend)+(-1:0)]<-paste(DTM_name,c("RF","GBM"),sep="_")
}
for (DTM_name in c(paste("Small2_DTM_Words_",nb_word_grams_max,"grams",sep=""),
paste("Small_DTM_Chars_",nb_char_grams_max1,"grams",sep=""),
paste("PCA_Small_DTM_Chars_",nb_char_grams_max1,"grams",sep=""),
paste("Small_DTM_Chars_",nb_char_grams_max2,"grams",sep=""),
paste("PCA_Small_DTM_Chars_",nb_char_grams_max2,"grams",sep=""))) {
print(DTM_name)
load(paste("Working_files/",Version,"_H_",item,"_NonTrees_w_",DTM_name,".RData",sep=""))
Mod2Blend<-cbind(Mod2Blend,
GLMNET_H,
SVM_lin_H,
SVM_rad_H)
names(Mod2Blend)[ncol(Mod2Blend)+(-2:0)]<-
paste(DTM_name,c("GLMNET","SVM_lin","SVM_rad"),sep="_")
}
save(Mod2Blend,file=paste("Working_files/",Version,"_H_",item,"_Mod2Blend.RData",sep=""))
T<-load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
Tr<-Mod2Blend
load(paste("Working_files/",Version,"_H_",item,"_Mod2Blend.RData",sep=""))
Test<-Mod2Blend
par(mfrow=c(3,3))
for (i in names(Mod2Blend)[2:ncol(Mod2Blend)]) {
plot(density(Tr[,i]),main=paste(i))
lines(density(Test[,i]),col=2)
}
source("_RUN_Me.R")
source("_TEST_Me.R")
load(paste("Working_files/",Version,"_",item,"_NNLS.RData",sep="")
)
load(paste("Working_files/",Version,"_H_",item,"_Mod2Blend.RData",sep=""))
str(NLLS)
str(NNLS)
NNLS_H<-0
for (i in 1:length(K))
NNLS_H<-NNLS_H+as.matrix(Mod2Blend)%*% NNLS$fit[[i]]
NNLS_H<-0
for (i in 1:length(K))
NNLS_H<-NNLS_H+as.matrix(Mod2Blend[,-1])%*% NNLS$fit[[i]]
for (item in item_list) {
load(paste("Working_files/",Version,"_",item,"_NNLS.RData",sep=""))
load(paste("Working_files/",Version,"_H_",item,"_Mod2Blend.RData",sep=""))
NNLS_H<-0
for (i in 1:length(NNLS$fit))
NNLS_H<-NNLS_H+as.matrix(Mod2Blend[,-1])%*% NNLS$fit[[i]]
print(item)
save(NNLS_H,file=paste("Working_files/",Version,"_H_",item,"_NNLS.RData",sep=""))
}
length(item_list)
par(mfrow=c(5,5))
par(mar=c(1,1,3,1))
for (item in item_list) {
load(paste("Working_files/",Version,"_",item,"_NNLS.RData",sep=""))
load(paste("Working_files/",Version,"_H_",item,"_NNLS.RData",sep=""))
plot(density(NLLS$yhat_V),main=paste(item))
lines(density(NNLS_H),col=2)
}
par(mfrow=c(5,5))
par(mar=c(1,1,3,1))
for (item in item_list) {
load(paste("Working_files/",Version,"_",item,"_NNLS.RData",sep=""))
load(paste("Working_files/",Version,"_H_",item,"_NNLS.RData",sep=""))
plot(density(NNLS$yhat_V),main=paste(item))
lines(density(NNLS_H),col=2)
}
str(NNLS)
par(mfrow=c(5,5))
par(mar=c(1,1,3,1))
for (item in item_list) {
load(paste("Working_files/",Version,"_",item,"_NNLS.RData",sep=""))
load(paste("Working_files/",Version,"_H_",item,"_NNLS.RData",sep=""))
plot(density(NNLS$yhatV),main=paste(item))
lines(density(NNLS_H),col=2)
}
for (item in item_list) {
load(paste("Working_files/",Version,"_",item,"_NNLS.RData",sep=""))
load(paste("Working_files/",Version,"_H_",item,"_Mod2Blend.RData",sep=""))
NNLS_H<-0
for (i in 1:length(NNLS$fit))
NNLS_H<-NNLS_H+as.matrix(Mod2Blend[,-1])%*% NNLS$fit[[i]]/length(NNLS$fit)
print(item)
save(NNLS_H,file=paste("Working_files/",Version,"_H_",item,"_NNLS.RData",sep=""))
}
par(mfrow=c(5,5))
par(mar=c(1,1,3,1))
for (item in item_list) {
load(paste("Working_files/",Version,"_",item,"_NNLS.RData",sep=""))
load(paste("Working_files/",Version,"_H_",item,"_NNLS.RData",sep=""))
plot(density(NNLS$yhatV),main=paste(item))
lines(density(NNLS_H),col=2)
}
test<-read.csv(paste(wd_path,'/Input/frompems/',item,'.tsv',sep=""), header=TRUE,
sep = "\t", fileEncoding="windows-1252",quote="")
names(test)
print(cor(test[cond,Response_name],NNLS_H[cond],method="pearson")
)
test<-read.csv(paste(wd_path,'/Input/frompems/',item,'.tsv',sep=""), header=TRUE,
sep = "\t", fileEncoding="windows-1252",quote="")
test[,Response_name]<-as.numeric(as.character(test[,Response_name]))
cond<-!is.na(test[,Response_name]),]
cond<-!is.na(test[,Response_name])
print(cor(test[cond,Response_name],NNLS_H[cond],method="pearson"))
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
print(cor(Mod2Blend$y,NNLS$yhatV,method="pearson"))
for (item in item_list) {
print(item)
test<-read.csv(paste(wd_path,'/Input/frompems/',item,'.tsv',sep=""), header=TRUE,
sep = "\t", fileEncoding="windows-1252",quote="")
test[,Response_name]<-as.numeric(as.character(test[,Response_name]))
cond<-!is.na(test[,Response_name])
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
print(cor(Mod2Blend$y,NNLS$yhatV,method="pearson"))
print(cor(test[cond,Response_name],NNLS_H[cond],method="pearson"))
}
str(NNLS$yhatV)
test<-read.csv(paste(wd_path,'/Input/frompems/',item,'.tsv',sep=""), header=TRUE,
sep = "\t", fileEncoding="windows-1252",quote="")
test[,Response_name]<-as.numeric(as.character(test[,Response_name]))
cond<-!is.na(test[,Response_name])
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
print(cor(Mod2Blend$y,NNLS$yhatV,method="pearson"))
for (item in item_list) {
print(item)
test<-read.csv(paste(wd_path,'/Input/frompems/',item,'.tsv',sep=""), header=TRUE,
sep = "\t", fileEncoding="windows-1252",quote="")
test[,Response_name]<-as.numeric(as.character(test[,Response_name]))
cond<-!is.na(test[,Response_name])
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
load(paste("Working_files/",Version,"_",item,"_NNLS.RData",sep=""))
print(cor(Mod2Blend$y,NNLS$yhatV,method="pearson"))
load(paste("Working_files/",Version,"_H_",item,"_NNLS.RData",sep=""))
print(cor(test[cond,Response_name],NNLS_H[cond],method="pearson"))
}
Kfolds
source("_KFolds.R")
Kfolds
Nrows
CV_pearson
source("CV_NNLS.R")
source("_KFolds.R")
for (item in item_list) {
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
Kb<-Kfolds(896,nb_folds_training,nrow(Mod2Blend))
NNLS<-CV_NNLS(x=Mod2Blend[,-1],y=Mod2Blend$y,
K=Kb,nb_cores=nb_cores,seed=9867)
CV_pearson[CV_pearson$Model=="Blend",paste("I",item,sep="")]<-cor(Mod2Blend$y,NNLS$yhatV,method="pearson")
save(NNLS,Kb,file=paste("Working_files/",Version,"_",item,"_NNLS.RData",sep=""))
print(item)
}
CV_pearson
summary(Mod2Blend)
item=item_list[1]
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
CV_pearson<-data.frame(Model=names(Mod2Blend)[2:ncol(Mod2Blend)])
for (item in item_list) for (Model in CV_pearson$Model) {
print(item)
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
CV_pearson[CV_pearson$Model==Model,paste("I",item,sep="")]<-cor(Mod2Blend$y,Mod2Blend[,Model],method="pearson")
}
CV_pearson$All<-rowSums(CV_pearson[,-1])
CV_pearson
CV_pearson$Model<-as.character(CV_pearson$Model)
tmp<-CV_pearson[1,]
tmp[1,1]<-"Blend"
tmp[1,-1]<-0
CV_pearson<-rbind(CV_pearson,tmp)
load(paste("Working_files/",Version,"_",item,"_NNLS.RData",sep=""))
item=item_list[1]
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
CV_pearson<-data.frame(Model=names(Mod2Blend)[2:ncol(Mod2Blend)])
CV_pearson$Model<-as.character(CV_pearson$Model)
tmp<-CV_pearson[1,]
tmp[1,1]<-"Blend"
tmp[1,-1]<-0
CV_pearson<-rbind(CV_pearson,tmp)
item=item_list[1]
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
CV_pearson<-data.frame(Model=names(Mod2Blend)[2:ncol(Mod2Blend)])
CV_pearson$Model<-as.character(CV_pearson$Model)
CV_pearson
item=item_list[1]
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
CV_pearson<-data.frame(Model=c(names(Mod2Blend)[2:ncol(Mod2Blend)],"Blend"))
CV_pearson
for (item in item_list) {
print(item)
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
for (Model in CV_pearson$Model) {
CV_pearson[CV_pearson$Model==Model,paste("I",item,sep="")]<-cor(Mod2Blend$y,Mod2Blend[,Model],method="pearson")
}
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
CV_pearson[CV_pearson$Model=="Blend",paste("I",item,sep="")]<-cor(Mod2Blend$y,NNLS$yhatV,method="pearson")
}
CV_pearson[CV_pearson$Model==Model,paste("I",item,sep="")]<-cor(Mod2Blend$y,Mod2Blend[,Model],method="pearson")
Model
item=item_list[1]
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
CV_pearson<-data.frame(Model=c(names(Mod2Blend)[2:ncol(Mod2Blend)],"Blend"))
for (item in item_list) {
print(item)
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
for (Model in CV_pearson$Model) {
if (Model=="Blend") {
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
CV_pearson[CV_pearson$Model=="Blend",paste("I",item,sep="")]<-cor(Mod2Blend$y,NNLS$yhatV,method="pearson")
} else
CV_pearson[CV_pearson$Model==Model,paste("I",item,sep="")]<-cor(Mod2Blend$y,Mod2Blend[,Model],method="pearson")
}
}
item=item_list[1]
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
CV_pearson<-data.frame(Model=c(names(Mod2Blend)[2:ncol(Mod2Blend)],"Blend"))
for (item in item_list) {
print(item)
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
for (Model in CV_pearson$Model) {
if (Model=="Blend") {
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
CV_pearson[CV_pearson$Model=="Blend",paste("I",item,sep="")]<-cor(Mod2Blend$y,NNLS$yhatV,method="pearson")
} else CV_pearson[CV_pearson$Model==Model,paste("I",item,sep="")]<-cor(Mod2Blend$y,Mod2Blend[,Model],method="pearson")
}
}
Model
CV_pearson
cor(Mod2Blend$y,NNLS$yhatV,method="pearson")
str(NNLS$yhatV)
str(Mod2Blend$y)
item=item_list[1]
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
CV_pearson<-data.frame(Model=c(names(Mod2Blend)[2:ncol(Mod2Blend)],"Blend"))
for (item in item_list) {
print(item)
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
for (Model in CV_pearson$Model) {
if (Model=="Blend") {
load(paste("Working_files/",Version,"_",item,"_NNLS.RData",sep=""))
CV_pearson[CV_pearson$Model=="Blend",paste("I",item,sep="")]<-cor(Mod2Blend$y,NNLS$yhatV,method="pearson")
} else CV_pearson[CV_pearson$Model==Model,paste("I",item,sep="")]<-cor(Mod2Blend$y,Mod2Blend[,Model],method="pearson")
}
}
CV_pearson$All<-rowSums(CV_pearson[,-1])
CV_pearson
source("_Kappa")
item=item_list[1]
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
CV_SQWKappa<-data.frame(Model=c(names(Mod2Blend)[2:ncol(Mod2Blend)],"Blend"))
for (item in item_list) {
print(item)
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
for (Model in CV_SQWKappa$Model) {
if (Model=="Blend") {
load(paste("Working_files/",Version,"_",item,"_NNLS.RData",sep=""))
CV_SQWKappa[CV_SQWKappa$Model=="Blend",paste("I",item,sep="")]<-SQWKappa(Mod2Blend$y,NNLS$yhatV)
} else CV_SQWKappa[CV_SQWKappa$Model==Model,paste("I",item,sep="")]<-SQWKappa(Mod2Blend$y,Mod2Blend[,Model])
}
}
source("_Kappa.R")
item=item_list[1]
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
CV_SQWKappa<-data.frame(Model=c(names(Mod2Blend)[2:ncol(Mod2Blend)],"Blend"))
for (item in item_list) {
print(item)
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
for (Model in CV_SQWKappa$Model) {
if (Model=="Blend") {
load(paste("Working_files/",Version,"_",item,"_NNLS.RData",sep=""))
CV_SQWKappa[CV_SQWKappa$Model=="Blend",paste("I",item,sep="")]<-SQWKappa(Mod2Blend$y,NNLS$yhatV)
} else CV_SQWKappa[CV_SQWKappa$Model==Model,paste("I",item,sep="")]<-SQWKappa(Mod2Blend$y,Mod2Blend[,Model])
}
}
CV_SQWKappa$All<-rowSums(CV_SQWKappa[,-1])
Store(CV_SQWKappa)
gc()
CV_SQWKappa
t(CV_SQWKappa[,23])
t(CV_pearson[,23])
t(CV_pearson[23,])
t(CV_SQWKappa[23,])
cbind(t(CV_pearson[23,]),t(CV_SQWKappa[23,]))
source("CV_ADJ.R")
source("_KFolds.R")
for (item in item_list) {
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
load(paste("Working_files/",Version,"_",item,"_NNLS.RData",sep=""))
Kc<-Kfolds(896,nb_folds_training,length(NNLS$yhatV))
ADJ<-ADJ(x=NNLS$yhatV,y=Mod2Blend$y,K=Kc,d=2,nb_cores=nb_cores,seed=seed)
save(ADJ,Kc,file=paste("Working_files/",Version,"_",item,"_ADJ.RData",sep=""))
print(item)
}
source("CV_ADJ.R")
source("_KFolds.R")
for (item in item_list) {
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
load(paste("Working_files/",Version,"_",item,"_NNLS.RData",sep=""))
Kc<-Kfolds(896,nb_folds_training,length(NNLS$yhatV))
ADJ<-CV_ADJ(x=NNLS$yhatV,y=Mod2Blend$y,K=Kc,d=2,nb_cores=nb_cores,seed=seed)
save(ADJ,Kc,file=paste("Working_files/",Version,"_",item,"_ADJ.RData",sep=""))
print(item)
}
source("CV_ADJ.R")
source("_KFolds.R")
for (item in item_list) {
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
load(paste("Working_files/",Version,"_",item,"_NNLS.RData",sep=""))
Kc<-Kfolds(896,nb_folds_training,length(NNLS$yhatV))
ADJ<-CV_ADJ(x=NNLS$yhatV,y=Mod2Blend$y,K=Kc,d=2,nb_cores=nb_cores,seed=seed)
save(ADJ,Kc,file=paste("Working_files/",Version,"_",item,"_ADJ.RData",sep=""))
print(item)
}
for (item in item_list) {
print(item)
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
for (Model in CV_SQWKappa$Model) {
if (Model=="Adjust") {
load(paste("Working_files/",Version,"_",item,"_ADJ.RData",sep=""))
CV_SQWKappa[CV_SQWKappa$Model==Model,paste("I",item,sep="")]<-SQWKappa(Mod2Blend$y,ADJ$yhatV)
} else if (Model=="Blend") {
load(paste("Working_files/",Version,"_",item,"_NNLS.RData",sep=""))
CV_SQWKappa[CV_SQWKappa$Model==Model,paste("I",item,sep="")]<-SQWKappa(Mod2Blend$y,NNLS$yhatV)
} else CV_SQWKappa[CV_SQWKappa$Model==Model,paste("I",item,sep="")]<-SQWKappa(Mod2Blend$y,Mod2Blend[,Model])
}
}
source("_Kappa.R")
item=item_list[1]
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
CV_SQWKappa<-data.frame(Model=c(names(Mod2Blend)[2:ncol(Mod2Blend)],"Blend","Adjust"))
for (item in item_list) {
print(item)
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
for (Model in CV_SQWKappa$Model) {
if (Model=="Adjust") {
load(paste("Working_files/",Version,"_",item,"_ADJ.RData",sep=""))
CV_SQWKappa[CV_SQWKappa$Model==Model,paste("I",item,sep="")]<-SQWKappa(Mod2Blend$y,ADJ$yhatV)
} else if (Model=="Blend") {
load(paste("Working_files/",Version,"_",item,"_NNLS.RData",sep=""))
CV_SQWKappa[CV_SQWKappa$Model==Model,paste("I",item,sep="")]<-SQWKappa(Mod2Blend$y,NNLS$yhatV)
} else CV_SQWKappa[CV_SQWKappa$Model==Model,paste("I",item,sep="")]<-SQWKappa(Mod2Blend$y,Mod2Blend[,Model])
}
}
CV_SQWKappa$All<-rowSums(CV_SQWKappa[,-1])
CV_SQWKappa
cbind(t(CV_pearson[23,]),t(CV_SQWKappa[23:24,]))
source("CV_ADJ.R")
source("_KFolds.R")
for (item in item_list) {
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
load(paste("Working_files/",Version,"_",item,"_NNLS.RData",sep=""))
Kc<-Kfolds(896,nb_folds_training,length(NNLS$yhatV))
ADJ1<-CV_ADJ(x=NNLS$yhatV,y=Mod2Blend$y,K=Kc,d=1,nb_cores=nb_cores,seed=seed)
save(ADJ1,Kc,file=paste("Working_files/",Version,"_",item,"_ADJ1.RData",sep=""))
print(item)
}
for (item in item_list) {
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
load(paste("Working_files/",Version,"_",item,"_NNLS.RData",sep=""))
Kc<-Kfolds(896,nb_folds_training,length(NNLS$yhatV))
ADJ2<-CV_ADJ(x=NNLS$yhatV,y=Mod2Blend$y,K=Kc,d=2,nb_cores=nb_cores,seed=seed)
save(ADJ2,Kc,file=paste("Working_files/",Version,"_",item,"_ADJ2.RData",sep=""))
print(item)
}
cbind(t(CV_pearson[23,]),t(CV_SQWKappa[23:25,]))
source("_Kappa.R")
item=item_list[1]
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
CV_SQWKappa<-data.frame(Model=c(names(Mod2Blend)[2:ncol(Mod2Blend)],"Blend","Adjust1","Adjust2"))
for (item in item_list) {
print(item)
load(paste("Working_files/",Version,"_",item,"_Mod2Blend.RData",sep=""))
for (Model in CV_SQWKappa$Model) {
if (Model=="Adjust1") {
load(paste("Working_files/",Version,"_",item,"_ADJ1.RData",sep=""))
CV_SQWKappa[CV_SQWKappa$Model==Model,paste("I",item,sep="")]<-SQWKappa(Mod2Blend$y,ADJ1$yhatV)
} else if (Model=="Adjust2") {
load(paste("Working_files/",Version,"_",item,"_ADJ2.RData",sep=""))
CV_SQWKappa[CV_SQWKappa$Model==Model,paste("I",item,sep="")]<-SQWKappa(Mod2Blend$y,ADJ2$yhatV)
} else if (Model=="Blend") {
load(paste("Working_files/",Version,"_",item,"_NNLS.RData",sep=""))
CV_SQWKappa[CV_SQWKappa$Model==Model,paste("I",item,sep="")]<-SQWKappa(Mod2Blend$y,NNLS$yhatV)
} else CV_SQWKappa[CV_SQWKappa$Model==Model,paste("I",item,sep="")]<-SQWKappa(Mod2Blend$y,Mod2Blend[,Model])
}
}
CV_SQWKappa$All<-rowSums(CV_SQWKappa[,-1])
cbind(t(CV_pearson[23,]),t(CV_SQWKappa[23:25,]))
